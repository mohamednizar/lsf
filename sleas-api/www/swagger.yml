openapi: 3.0.0
info:
  description: This is the CS-HRM api server. Here you find all APIs related to the system. The api can be find on github
  version: 1.0.0
  title: CS-HRM
  termsOfService: ''
  contact:
    email: nizarm@opensource.lk
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: user
    description: Operations about employees in the system
    externalDocs:
      description: Find out more about our project on git
      url: 'https://github.com/LankaSoftwareFoundation/MoE-SLEAS-HRM'
paths:
  /employee:
    post:
      tags:
        - user
      summary: Create an Employee
      description: This can only be done by the logged in user with permission for create employees.
      operationId: createUser
      security:
        - cs_auth:
            - 'write:employee'
            - 'read:employee'
      responses:
        default:
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Created user object
        required: true
  /employee/createWithArray:
    post:
      tags:
        - user
      summary: Creates list of Employees with given input array
      description: ''
      operationId: createUsersWithArrayInput
      responses:
        default:
          description: successful operation
      security:
        - cs_auth:
            - 'write:user'
            - 'read:user'
      requestBody:
        $ref: '#/components/requestBodies/UserArray'
  /employee/createWithList:
    post:
      tags:
        - user
      summary: Creates list of Employees with given input array
      description: ''
      operationId: createUsersWithListInput
      responses:
        default:
          description: successful operation
      security:
        - cs_auth:
            - 'write:user'
            - 'read:user'
      requestBody:
        $ref: '#/components/requestBodies/UserArray'
  '/employee/list/{pageId}':
    get:
      tags:
        - user
      summary: list of users with given page as pagination
      description: ''
      operationId: listEmployees
      parameters:
        - name: pageId
          in: path
          description: The page id should be provided
          required: true
          schema:
            type: string
            default: '1'
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Personal_Details'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Personal_Details'
      security:
        - cs_auth:
            - 'write:user'
            - 'read:user'
  '/user/register':
    post:
      tags:
        - user
      summary: Register a user
      description: This can only be done by anyone with IDM-Gov
      operationId: registerUser
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
      security:
        - cs_auth:
            - 'write:user'
            - 'read:user'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Updated user object
        required: true
  '/user/{username}':
    get:
      tags:
        - user
      summary: Get user by user name
      description: ''
      operationId: getUserByName
      parameters:
        - name: username
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
      security:
        - cs_auth:
            - 'write:user'
            - 'read:user'
    put:
      tags:
        - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
        - name: username
          in: path
          description: name that need to be updated
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
      security:
        - cs_auth:
            - 'write:user'
            - 'read:user'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Updated user object
        required: true
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
      security:
        - cs_auth:
            - 'write:user'
            - 'read:user'
  /user/login:
    post:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      responses:
        '200':
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  description: The user name for login
                  type: string
                password:
                  description: The password for login in clear text
                  type: string
              required:
                - username
                - password
  /user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      responses:
        default:
          description: successful operation
      security:
        - cs_auth:
            - 'write:user'
            - 'read:user'
  '/user/uploadpic/{userId}':
    post:
      tags:
        - user
      summary: uploads an image
      description: ''
      operationId: uploadImage
      parameters:
        - name: userId
          in: path
          description: ID of user to update
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - cs_auth:
            - 'write:user'
            - 'read:user'
      requestBody:
        $ref: '#/components/requestBodies/uploadAttachements'
  /employee/employeeAttachments:
    post:
      tags:
        - user
      summary: uploads Employee related files
      description: ''
      operationId: uploadFile
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - cs_auth:
            - 'write:user'
            - 'read:user'
      requestBody:
        $ref: '#/components/requestBodies/uploadAttachements'
    get:
      tags:
        - user
      summary: Read Employee related files
      description: ''
      operationId: readFile
      parameters:
        - name: userId
          in: path
          description: ID of user to update
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - cs_auth:
            - 'write:user'
            - 'read:user'
    put:
      tags:
        - user
      summary: Update Employee related files
      description: ''
      operationId: uploadFile
      parameters:
        - name: userId
          in: path
          description: ID of user to update
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - cs_auth:
            - 'write:user'
            - 'read:user'
      requestBody:
        $ref: '#/components/requestBodies/uploadAttachements'
    delete:
      tags:
        - user
      summary: Update Employee related files
      description: ''
      operationId: deleteFile
      parameters:
        - name: fileInfo
          in: query
          schema:
            type: array
            items:
              type: object
              properties:
                userId:
                  type: integer
                fileId:
                  type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - cs_auth:
            - 'write:user'
            - 'read:user'
  /user/statusUpdate:
    post:
      tags:
        - user
      summary: Status  update
      description: Activate and deactivate an Employee
      operationId: statusUpdate
      responses:
        default:
          description: successful operation
      security:
        - cs_auth:
            - 'write:user'
            - 'read:user'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/General_Service'
        description: Status update user object
        required: true
components:
  securitySchemes:
    cs_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  requestBodies:
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
      description: List of user object
      required: true
    uploadAttachements:
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              additionalMetadata:
                description: Additional data to pass to server
                type: string
              file:
                description: file to upload
                type: string
                format: binary
              userId:
                description:  Employee id 
                type: string
  schemas:
    User:
      type: object
      properties:
        Account_Details:
          $ref: '#/components/schemas/Account_Details'
        Personal_Details:
          $ref: '#/components/schemas/Personal_Details'
        Permanent_Contact_Details:
          $ref: '#/components/schemas/Contact_Details'
        Temparary_Contact_Details:
          $ref: '#/components/schemas/Contact_Details'
        General_Service:
          $ref: '#/components/schemas/General_Service'
        Current_Service:
          $ref: '#/components/schemas/Current_Service'
    Account_Details:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        user_name:
          descripttion: Username of the Employee for login to the HR system
          type: "string"
          example:  user1
        passwd:
          type: "string"
          format: "password"
          descripttion: Password of the Employee for login to the HR system
          example:  "%^shjla"
        level:
          type: "string"
        workplace_id:
          type: "integer"
        sub_location_id:
          type: "string"
        person_id:
          type: "integer"
    Personal_Details:
      type: object
      properties:
        ID:
          type: integer
          format: int64
        NIC:
          type: string
          required: true
          example:  123456789V
        title:
          type: string
          required: true
          enum:  ['Rev','Mr','Mrs',Rev. Dr.,Dr,Dr. (Ms),Dr. (Mrs)]
        f_name:
          type: string
          description: First Name of the Employee 
          example:  Rathnayaka Mudalige
          required: true
        l_name:
          type: string
          description: Last Name of the Employee
          example:  Rathnayaka
          required: true
        m_name:
          type: string
          description: Middle Name of the Employe
          example:  Pajapathi Dananjana
        in_name:
          type: string
          description: Name with Initials  of the Employee
          example:  R.M.P.M.Rathnayaka
        si_in_name:
          type: string
          description: Fullname  of the Employee in Sinhala
          example: ආර්. එම්. පී. එම්. රත්නායක
        ta_in_name:
          type: string
          description: Fullname  of the Employee in Tamil
          require: true
          example: ஆர்.எம்.பி.எம்.ரத்நாயக்க
        dob:
          type: integer
          format: date
          example:  '1963-09-19'
          required: true
        ethinicity:
          type: string
          enum: [Sinhala,Sri Lankan Tamil,Indian Tamil,Muslim,Burger,Malay,Other]
          required: true
        gender:
          type: string
          enum: ['Male','Female']
          required: true
        civil_status:
          type: string
          enum: ['Married','Single','Divorced','Widowed']
          required: true
        f_appoint_data:
          type: integer
          format: date
          example: '2012-12-12'
        f_appoint_type:
          type: string
          enum: ['Permanant','Temperary']
        active:
          type: integer
          enum: [1,0]
        profile_pic:
          type: string
          format: url
          example:  https://example.com/profilepic/jfskljkfsdl
        user_updated:
          type: string
          example: user1
    Contact_Details:
      type: object
      properties:
        ID:
          type: integer
          format: int64
        address_type:
          type: string
          required: true
          enum: ['Permanant','Temperary']
        address_1:
          type: string
          example:  50/A/11 6th lane
          required: true
        address_2:
          type: string
          example:  Hansagiri Road
        address_3:
          type: string
          example:  Gampaha
        postal_code:
          type: integer
          example:  8600
        mobile:
          type: integer
          example:  1234567890
        telephone:
          type: integer
          example:  1234567890
        email:
          type: string
          format: email
    General_Service:
      type: object
      properties:
        ID:
          type: integer
          format: int64
        date_join:
          type: string
          format: date
          required: true
          example: '2016-01-12'
        way_join:
          type: string
          required: true
          description: Way of join to MoE
          enum: [Open,Limited,Merit,Super Numeral (PVC)]
        cadre:
          type: string
          required: true
          enum: [General Cadre,Special Cadre,Not Specified]
        grade_join:
          type: string
          enum: [Special,Grade I,Grade II,Grade II]
          required: true
        entrance_exam_rank:
          type: integer
        grade:
          type: string
          enum: [Special,Grade I,Grade II,Grade II]
        subject:
          type: integer
        medium:
          type: string
          enum: [Sinhala,Tamil,English]
        confirm:
          type: string
          enum: [Yes,No]
        confirm_date:
          type: string
          format: date
          example: '2012-12-12'
        promotion_date:
          type: string
          format: date
          example: '2013-12-12'
        f_appoint_date:
          type: string
          format: date
          example: '2011-12-12'
        eb_1_pass:
          type: string
          format: date
          example: '2013-12-12'
        eb_2_pass:
          type: string
          format: date
          example: '2014-12-12'
        eb_3_pass:
          type: string
          format: date
          example: '2015-12-12'
        pg_dip_pass:
          type: string
          format: date
          example: '2009-10-12'
        pg_deg_pass:
          type: string
          format: date
          example: '2010-08-12'
        cb_1_date:
          type: string
          format: date
          example: '2014-08-12'
        cb_2_date:
          type: string
          format: date
          example: '2015-08-12'
        cb_3_date:
          type: string
          format: date
          example: '2014-08-12'
        status:
          type: string
        deactivate_type_id:
          type: integer
        deactivate_date:
          type: string
          format: date
          example: '2018-08-12'
    Current_Service:
      type: object
      properties:
        ID:
          type: integer
          format: int64
        person_id:
          type: integer
        service_mode:
          type: integer
          enum: [First appointment,Promotion,Transfer,Promotion / Transfer,Attachment,Secondment,Releasement,Acting Duty,Performing Duty,Placement]
        service_status:
          type: string
          enum: [First appointment,Promotion,Transfer,Promotion / Transfer,Attachment,Secondment,Releasement,Acting Duty,Performing Duty,Placement]
        work_place_id:
          type: integer
          enum: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]
          items: 
              1:  Ministry of Education
              2:  Department of Examinations
              3:  Department of Education Publication
              4:  National Institute of Education
              5:  Provincial Department of Education
              6:  Provincial Ministry of Education
              7:  Zonal Education Office
              8:  Divisional Education Office
              9:  National College of Education
              10: Teacher Training College
              11: Teacher Centers
              12: Provincial ICT Education Centre (PICTEC)
              13: Zonal ICT Education Centre (ZICTEC/CRC)
              14: Education Resource Centre
              15: Provincial Education Development Center
              16: National School
              17: Provincial School
              18: Provinces
        sub_location_id:
          type: integer
        work_branch_id:
          type: integer
        work_division_id:
          type: integer
        designation_id:
          type: integer
        appoint_date:
          type: string
          format: date
        duty_date:
          type: string
          format: date
        duty_date_terminate:
          type: string
          format: date
        off_letter_no:
          type: string
        grade:
          type: string
        date_promoted:
          type: string
          format: date
        salary_drawned:
          type: string
        barcode:
          type: integer
        user_updated:
          type: integer
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
servers:
  - url: 'https://localhost/v2'
  - url: 'http://localhost/v2'
